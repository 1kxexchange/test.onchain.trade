{"version":3,"sources":["webpack://1kx-sourceCode/./src/pages/portf/index.less","webpack://1kx-sourceCode/./src/pages/portf/table.less","webpack://1kx-sourceCode/./src/pages/portf/borrowPositions.tsx","webpack://1kx-sourceCode/./src/pages/portf/walletBalance.tsx","webpack://1kx-sourceCode/./src/pages/portf/poolDetail.tsx","webpack://1kx-sourceCode/./src/pages/portf/poolDeposits.tsx","webpack://1kx-sourceCode/./src/pages/portf/table.tsx","webpack://1kx-sourceCode/./src/pages/portf/index.tsx"],"names":["module","exports","agent","agentVersion","BorrowPositions","props","useLocation","query","isPhone","walletChainId","tokenDatasSorted","dataSourceChainId","isLogin","list","loading","useState","currentToken","setCurrentToken","data","setData","showBorrow","parseInt","borrowVisibleIndex","setBorrowVisibleIndex","correctNetWork","showBorrowingPanel","n","item","useEffect","length","filter","v","parseFloat","userDebt","userTotalCol","columns","title","_","dataIndex","key","align","render","text","record","collaterals","positions","usdData","icons","map","amount","token","tokenData","getFullTokenDataById","push","formatSat","toString","tokenDecimal","icon","src","className","styles","tokenId","usd","usdPrice","value","prefix","useAbbr","symbol","style","width","height","size","suffix","rf","BN","forEach","userBorrowPrice","assets","_amount","plus","multipliedBy","collateralCredit","gt","Infinity","div","borrowCredit","color","lte","toFixed","userUpdatedAt","setShowPanelIndex","txt","columns_h5","dataSource","rowKey","spinning","indicator","Loading3QuartersOutlined","spin","fontSize","showPanelIndex","mapStateToProps","tokens","wallet","connect","WalletBalance","dispatch","useDispatch","userTokenBalance","fullName","onClick","type","payload","swapTokenId","history","PoolDetail","visible","setVisible","setShowLiuidityPanelIndex","userOsd","userReserve","userLpSupply","userLpBalance","osdTokenData","userTokenDebt","iconN","userLpRate","BigNumber","userUsd","footer","open","getContainer","document","getElementById","body","onCancel","closable","wrapClassName","osdSvg","PoolDeposits","liquidityVisibleIndex","setLiquidityVisibleIndex","detailVisible","setDetailVisible","showLiqPanel","marginLeft","index","PortfTable","tokenDatas","loadingData","account","setList","menuIndex","setMenuIndex","update","datas","changeShowList","placeholder","effects","Portf"],"mappings":"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","file":"p__portf.c29dc07e.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container___12ARh\",\"info\":\"info___1y4cK\",\"chart\":\"chart___1QoQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_wrap\":\"search_wrap___3CnXX\",\"btn\":\"btn___2MLeG\",\"icon\":\"icon___3Lteq\",\"table\":\"table___1srAK\",\"alignRight\":\"alignRight___1Gnt_\",\"alignLeft\":\"alignLeft___1FBK2\",\"td1\":\"td1___3_fLX\",\"td2\":\"td2___1faR-\",\"td3\":\"td3___1J30I\",\"green\":\"green___KLlDV\",\"red\":\"red___154Yf\",\"desc\":\"desc___3TnBO\",\"sizeIcon\":\"sizeIcon___1q_yd\",\"icon_wrap\":\"icon_wrap___3ysuA\",\"icon_osd\":\"icon_osd___3NHxg\",\"symbol\":\"symbol___3JfPo\",\"no\":\"no___3mLit\",\"full_name\":\"full_name___1efIu\",\"action\":\"action___1ro7P\",\"lprate\":\"lprate___2uTrP\",\"token\":\"token___3RTGO\",\"info\":\"info___1TeBS\",\"title\":\"title___pfhbb\",\"container\":\"container___3GRav\",\"layer_top\":\"layer_top___1cgoM\",\"menu\":\"menu___Zkrm7\",\"menu_item\":\"menu_item___1hkCQ\",\"menu_current_item\":\"menu_current_item___PGR3E\",\"line\":\"line___3K1ER\",\"borrowed_token\":\"borrowed_token___QqYIV\",\"borrowed_icon\":\"borrowed_icon___YM7pb\",\"borrowed_amount\":\"borrowed_amount___3qfmv\"};","import styles from './table.less'\nimport _ from '@/i18n'\nimport { agentVersion, formatSat, getFullTokenDataById, usdPrice } from '@/common/utils'\nimport type { ColumnsType } from 'antd/lib/table'\nimport { BorrowBtn, RepayBtn } from '../pools/borrowing/trigger'\nimport BorrowRepay from '../pools/borrowing'\nimport { Table } from 'antd'\nimport BN from 'bignumber.js'\nimport { useLocation, connect } from 'umi'\nimport { useEffect, useState } from 'react'\nimport DefultIcon from '@/components/icon/defult'\nimport FormatNumber from '@/components/formatNumber'\nimport { Loading3QuartersOutlined } from '@ant-design/icons'\nimport type {\n  TokenDataFullType,\n  TokenDataType,\n  TokenStateType,\n  WalletStateType,\n} from '@/models/dataType'\n\nconst agent = agentVersion()\n\nfunction BorrowPositions(props) {\n  const { query } = useLocation()\n  const isPhone = agent === 'iPhone' || agent === 'Android'\n  const { walletChainId, tokenDatasSorted, dataSourceChainId, isLogin, list, loading } = props\n\n  const [currentToken, setCurrentToken] = useState({} as TokenDataType)\n  const [data, setData] = useState([])\n  const [borrowVisibleIndex, setBorrowVisibleIndex] = useState(\n    typeof query.showBorrow === 'undefined' ? -1 : parseInt(query.showBorrow),\n  )\n  const correctNetWork = isLogin && dataSourceChainId === walletChainId\n  const showBorrowingPanel = async (n: number, item: TokenDataType) => {\n    setCurrentToken(item)\n    setBorrowVisibleIndex(n)\n  }\n\n  useEffect(() => {\n    if (list && list.length > 0)\n      setData(list.filter((v) => parseFloat(v.userDebt) > 0 || v.userTotalCol > 0))\n  }, [list])\n\n  const columns: ColumnsType<TokenDataFullType> = [\n    {\n      title: `${_('collateral')}/${_('value')}`,\n      dataIndex: 'collateral_type',\n      key: 'collateral_type',\n      align: 'left',\n      render: (text, record) => {\n        const { collaterals } = record.positions\n        let usdData = [],\n          icons = []\n        collaterals.map(({ amount, token }) => {\n          if (parseFloat(amount) > 0) {\n            const tokenData = getFullTokenDataById(token, tokenDatasSorted)\n            usdData.push({\n              token: tokenData,\n              amount: formatSat(amount.toString(), tokenData.tokenDecimal),\n            })\n            icons.push(\n              tokenData.icon ? (\n                <img src={tokenData.icon} className={styles.icon} key={token} />\n              ) : (\n                <DefultIcon tokenId={token} key={token} />\n              ),\n            )\n          }\n        })\n        const usd = usdPrice(usdData)\n        return (\n          <>\n            <div className={styles.icon_wrap}>{icons}</div>\n            <div>\n              <FormatNumber value={usd} prefix=\"$\" useAbbr={true} />\n            </div>\n          </>\n        )\n      },\n    },\n    {\n      title: _('borrowed'),\n      dataIndex: 'borrowed',\n      key: 'borrowed',\n      align: 'right',\n      render: (text, record) => {\n        const { userDebt, symbol, icon, tokenId } = record\n        const usd = usdPrice([{ amount: userDebt, token: record }])\n        return (\n          <>\n            <div className={styles.borrowed_token}>\n              <div className={styles.borrowed_icon}>\n                {icon ? (\n                  <img src={icon} className={styles.icon} style={{ width: 15, height: 15 }} />\n                ) : (\n                  <DefultIcon tokenId={tokenId} size={15} />\n                )}\n              </div>\n              <div>\n                <span className={styles.borrowed_amount}>\n                  <FormatNumber value={userDebt} useAbbr={true} suffix={symbol} />\n                </span>\n                <div className={styles.desc}>\n                  <FormatNumber value={usd} prefix=\"$\" useAbbr={true} />\n                </div>\n              </div>\n            </div>\n          </>\n        )\n      },\n    },\n    {\n      title: _('apr'),\n      dataIndex: 'apr',\n      key: 'apr',\n      align: 'right',\n      render: (text) => `${text}%`,\n    },\n    {\n      title: (\n        <>\n          {_('risk_factor')}\n          <br />\n          {_('liq_rf')}\n        </>\n      ),\n      dataIndex: 'liq',\n      key: 'liq',\n      align: 'right',\n      render: (text, record) => {\n        const { positions, userDebt } = record\n        const { collaterals } = positions\n        let rf = new BN(0)\n        collaterals.forEach(({ token, amount }) => {\n          const tokenData = getFullTokenDataById(token, tokenDatasSorted)\n          if (tokenData.tokenId) {\n            const { userBorrowPrice, assets, tokenDecimal } = tokenData\n            const _amount = formatSat(amount.toString(), tokenDecimal)\n            rf = rf.plus(\n              new BN(_amount).multipliedBy(userBorrowPrice).multipliedBy(assets.collateralCredit),\n            )\n          }\n        })\n\n        if (parseFloat(userDebt) <= 0) {\n          rf = rf.gt(0) ? new BN(Infinity) : new BN(0)\n        } else {\n          rf = rf.div(userDebt).div(record.userBorrowPrice).div(record.assets.borrowCredit)\n        }\n        let color = '#00A980'\n        if (rf.lte(1.05)) {\n          color = '#EB5757'\n        } else if (rf.lte(1.1)) {\n          color = ' #F2994A'\n        }\n\n        return (\n          <>\n            <div style={{ color }}>{rf.toString() === 'Infinity' ? '--' : rf.toFixed(2)}</div>\n\n            <div className={styles.line}>1.00</div>\n          </>\n        )\n      },\n    },\n    {\n      title: `${_('add_coll')}/${_('repay')}`,\n      dataIndex: 'repay',\n      key: 'repay',\n      align: 'center',\n      render: (text, record) => {\n        return correctNetWork ? (\n          <div className={styles.action}>\n            {parseFloat(record.userUpdatedAt) > 0 && (\n              <BorrowBtn\n                setShowPanelIndex={(n: number) => showBorrowingPanel(n, record)}\n                txt={_('edit')}\n              />\n            )}\n            {parseFloat(record.userDebt) > 0 && (\n              <RepayBtn setShowPanelIndex={(n: number) => showBorrowingPanel(n, record)} />\n            )}\n          </div>\n        ) : null\n      },\n    },\n  ]\n\n  const columns_h5: ColumnsType<TokenDataFullType> = [\n    {\n      title: `${_('collateral')}/${_('value')}`,\n      dataIndex: 'collateral_type',\n      key: 'collateral_type',\n      align: 'left',\n      render: (text, record) => {\n        const { collaterals } = record.positions\n        let usdData = [],\n          icons = []\n        collaterals.map(({ amount, token }) => {\n          const tokenData = getFullTokenDataById(token, tokenDatasSorted)\n          usdData.push({\n            token: tokenData,\n            amount: formatSat(amount.toString(), tokenData.tokenDecimal),\n          })\n          icons.push(\n            tokenData.icon ? (\n              <img src={tokenData.icon} className={styles.icon} key={token} />\n            ) : (\n              <DefultIcon tokenId={token} key={token} />\n            ),\n          )\n        })\n        const usd = usdPrice(usdData)\n        return (\n          <>\n            <div className={styles.icon_wrap}>{icons}</div>\n            <div>\n              <FormatNumber value={usd} prefix=\"$\" useAbbr={true} />\n            </div>\n          </>\n        )\n      },\n    },\n\n    {\n      title: (\n        <>\n          {_('risk_factor')}\n          <br />\n          {_('liq_rf')}\n        </>\n      ),\n      dataIndex: 'liq',\n      key: 'liq',\n      align: 'right',\n      render: (text, record) => {\n        const { positions, userDebt } = record\n        const { collaterals } = positions\n        let rf = new BN(0)\n        collaterals.forEach(({ token, amount }) => {\n          const tokenData = getFullTokenDataById(token, tokenDatasSorted)\n          const { userBorrowPrice, assets, tokenDecimal } = tokenData\n          const _amount = formatSat(amount.toString(), tokenDecimal)\n          rf = rf.plus(\n            new BN(_amount).multipliedBy(userBorrowPrice).multipliedBy(assets.collateralCredit),\n          )\n        })\n\n        if (parseFloat(userDebt) <= 0) {\n          rf = rf.gt(0) ? new BN(Infinity) : new BN(0)\n        } else {\n          rf = rf.div(userDebt).div(record.userBorrowPrice).div(record.assets.borrowCredit)\n        }\n        let color = '#00A980'\n        if (rf.lte(1.05)) {\n          color = '#EB5757'\n        } else if (rf.lte(1.1)) {\n          color = ' #F2994A'\n        }\n\n        return (\n          <>\n            <span style={{ color }}>{rf.toFixed(2)}</span>\n            <br />\n            1.00\n          </>\n        )\n      },\n    },\n  ]\n  return (\n    <>\n      <Table\n        columns={isPhone ? columns_h5 : columns}\n        dataSource={data}\n        className={styles.table}\n        rowKey=\"id\"\n        loading={{\n          spinning: loading,\n          indicator: <Loading3QuartersOutlined spin style={{ fontSize: 30 }} />,\n        }}\n      />\n\n      {borrowVisibleIndex > -1 && (\n        <BorrowRepay\n          showPanelIndex={borrowVisibleIndex}\n          setShowPanelIndex={setBorrowVisibleIndex}\n          currentToken={currentToken}\n        />\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  tokens,\n  wallet,\n}: {\n  tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(BorrowPositions)\n","import styles from './table.less'\nimport _ from '@/i18n'\nimport { usdPrice } from '@/common/utils'\nimport type { ColumnsType } from 'antd/lib/table'\nimport { Table } from 'antd'\nimport { useEffect, useState } from 'react'\nimport DefultIcon from '@/components/icon/defult'\nimport FormatNumber from '@/components/formatNumber'\nimport { Loading3QuartersOutlined } from '@ant-design/icons'\nimport type { TokenDataFullType } from '@/models/dataType'\nimport { history, useDispatch } from 'umi'\n\nfunction WalletBalance(props) {\n  const { list, loading } = props\n  const dispatch = useDispatch()\n\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    if (list && list.length > 0) setData(list.filter((v) => parseFloat(v.userTokenBalance) > 0))\n  }, [list])\n\n  const columns: ColumnsType<TokenDataFullType> = [\n    {\n      title: _('asset'),\n      dataIndex: 'asset',\n      key: 'asset',\n      align: 'left',\n      render: (text, record) => {\n        const { icon, symbol, fullName, tokenId } = record\n        return (\n          <div className={styles.token}>\n            <div className={styles.info}>\n              <div className={styles.icon_wrap}>\n                {icon ? (\n                  <img src={icon} className={styles.icon} />\n                ) : (\n                  <DefultIcon tokenId={tokenId} />\n                )}\n              </div>\n              <div className={styles.title}>\n                <div className={styles.symbol}>{symbol}</div>\n                <div className={styles.full_name}>{fullName}</div>\n              </div>\n            </div>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('balance'),\n      dataIndex: 'balance',\n      key: 'balance',\n      align: 'right',\n      render: (text, record) => {\n        const { userTokenBalance, symbol } = record\n        const usd = usdPrice([{ amount: userTokenBalance, token: record }])\n        return (\n          <>\n            <div>\n              <FormatNumber value={userTokenBalance} useAbbr={true} suffix={symbol} />\n            </div>\n\n            <div className={styles.desc}>\n              <FormatNumber value={usd} prefix=\"$\" useAbbr={true} />\n            </div>\n          </>\n        )\n      },\n    },\n\n    {\n      title: '-',\n      dataIndex: 'swap',\n      key: 'swap',\n      align: 'center',\n      render: (text, record) => {\n        const { tokenId } = record\n        return (\n          <div\n            className={styles.action}\n            onClick={() => {\n              dispatch({\n                type: 'tokens/save',\n                payload: {\n                  swapTokenId: tokenId,\n                },\n              })\n              history.push('/trade')\n            }}\n          >\n            {_('swap')}\n          </div>\n        )\n      },\n    },\n  ]\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={data}\n      className={styles.table}\n      rowKey=\"id\"\n      loading={{\n        spinning: loading,\n        indicator: <Loading3QuartersOutlined spin style={{ fontSize: 30 }} />,\n      }}\n    />\n  )\n}\n\nexport default WalletBalance\n","import _ from '@/i18n'\nimport { Modal } from 'antd'\nimport { connect } from 'umi'\nimport styles from './index.less'\nimport Btn from '@/components/btn'\nimport BigNumber from 'bignumber.js'\nimport DefultIcon from '@/components/icon/defult'\nimport { toFixed, usdPrice } from '@/common/utils'\nimport FormatNumber from '@/components/formatNumber'\nimport type { TokenStateType, WalletStateType } from '@/models/dataType'\nimport { osdSvg } from '@/common/config'\n\nfunction PoolDetail(props) {\n  const { visible, setVisible, setShowLiuidityPanelIndex, token } = props\n\n  const {\n    userOsd,\n    userReserve,\n    symbol,\n    userLpSupply,\n    icon,\n    tokenId,\n    fullName,\n    userLpBalance,\n    osdTokenData,\n    tokenDecimal,\n    userTokenDebt,\n  } = token\n  const iconN = icon ? <img src={icon} className={styles.icon} /> : <DefultIcon tokenId={tokenId} />\n\n  const userLpRate =\n    parseFloat(userLpSupply) > 0 ? new BigNumber(userLpBalance).div(userLpSupply) : new BigNumber(0)\n\n  const usd = usdPrice([\n    {\n      amount: new BigNumber(userReserve).plus(userTokenDebt).toFixed(tokenDecimal),\n      token,\n    },\n    { amount: userOsd, token: osdTokenData },\n  ])\n\n  const userUsd = userLpRate.multipliedBy(usd).toFixed(2)\n\n  return (\n    <Modal\n      width={890}\n      footer={null}\n      open={visible}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setVisible(false)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <div className={styles.container}>\n        <div className={styles.token}>\n          <div className={styles.icon_wrap}>\n            {iconN}\n            <img src={osdSvg} className={styles.icon_osd} />\n          </div>\n          <div className={styles.title}>\n            <div className={styles.symbol}>{symbol}</div>\n            <div className={styles.full_name}>{fullName}</div>\n          </div>\n        </div>\n        <>\n          <div>\n            <FormatNumber value={toFixed(userReserve, 2)} useAbbr={true} /> {symbol}\n          </div>\n          <div>\n            <FormatNumber value={toFixed(userOsd, 2)} useAbbr={true} /> {osdTokenData.symbol}\n          </div>\n        </>\n        <>\n          <div>\n            {userLpBalance} {symbol} LP | {userLpRate.multipliedBy(100).toFixed(2)}%\n          </div>\n          <div>\n            <FormatNumber value={userUsd} useAbbr={true} prefix=\"$\" />\n          </div>\n        </>\n\n        <div className={styles.btns_wrap}>\n          <Btn onClick={() => setShowLiuidityPanelIndex(1)} className={styles.btn} height=\"48\">\n            {_('remove_liquidity')}\n          </Btn>\n          <Btn onClick={() => setShowLiuidityPanelIndex(0)} className={styles.btn} height=\"48\">\n            {_('add_liquidity')}\n          </Btn>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = ({\n  tokens,\n  wallet,\n}: {\n  tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(PoolDetail)\n","import styles from './table.less'\nimport _ from '@/i18n'\nimport { agentVersion, toFixed, usdPrice } from '@/common/utils'\nimport type { ColumnsType } from 'antd/lib/table'\nimport { Table } from 'antd'\nimport { useEffect, useState } from 'react'\nimport DefultIcon from '@/components/icon/defult'\nimport FormatNumber from '@/components/formatNumber'\nimport { Loading3QuartersOutlined } from '@ant-design/icons'\nimport type { TokenDataFullType, TokenDataType } from '@/models/dataType'\nimport BigNumber from 'bignumber.js'\nimport Liquidity from '../pools/liquidity'\nimport PoolDetail from './poolDetail'\nimport { osdSvg } from '@/common/config'\n\nconst agent = agentVersion()\nconst isPhone = agent === 'iPhone' || agent === 'Android'\n\nfunction PoolDeposits(props) {\n  const { list, loading, osdTokenData, isLogin, dataSourceChainId, walletChainId } = props\n\n  const [data, setData] = useState([])\n  const [liquidityVisibleIndex, setLiquidityVisibleIndex] = useState(-1)\n  const [detailVisible, setDetailVisible] = useState(false)\n  const [currentToken, setCurrentToken] = useState({} as TokenDataType)\n\n  const correctNetWork = isLogin && dataSourceChainId === walletChainId\n\n  useEffect(() => {\n    if (list && list.length > 0) setData(list.filter((v) => parseFloat(v.userLpBalance) > 0))\n  }, [list])\n\n  const showLiqPanel = async (n: number, item: TokenDataType) => {\n    setCurrentToken(item)\n    setLiquidityVisibleIndex(n)\n  }\n\n  const columns_h5: ColumnsType<TokenDataFullType> = [\n    {\n      title: _('pool'),\n      dataIndex: 'pool',\n      key: 'pool',\n      align: 'left',\n      render: (text, record) => {\n        const { icon, symbol, fullName, tokenId } = record\n        return (\n          <div className={styles.token}>\n            <div className={styles.info}>\n              <div className={styles.icon_wrap}>\n                {icon ? (\n                  <img src={icon} className={styles.icon} />\n                ) : (\n                  <DefultIcon tokenId={tokenId} />\n                )}\n                <img src={osdSvg} className={styles.icon_osd} />\n              </div>\n              <div className={styles.title}>\n                <div className={styles.symbol}>{symbol}</div>\n                <div className={styles.full_name}>{fullName}</div>\n              </div>\n            </div>\n          </div>\n        )\n      },\n    },\n\n    {\n      title: _('pool_size'),\n      dataIndex: 'size',\n      key: 'poolInfo',\n      align: 'right',\n      render: (text, record) => {\n        const { userOsd, userReserve } = record\n        return (\n          <>\n            <div>\n              <FormatNumber value={toFixed(userReserve, 2)} useAbbr={true} /> {record.symbol}\n            </div>\n            <div className={styles.line}>\n              <FormatNumber value={toFixed(userOsd, 2)} useAbbr={true} /> {osdTokenData.symbol}\n            </div>\n          </>\n        )\n      },\n    },\n\n    {\n      title: (\n        <>\n          LP | {_('increased_pool')}\n          <br />\n          {_('value')}\n        </>\n      ),\n      dataIndex: 'lp',\n      key: 'lp',\n      align: 'right',\n      render: (text, record) => {\n        const {\n          userLpBalance,\n          userLpSupply,\n          symbol,\n          userReserve,\n          userOsd,\n          userTokenDebt,\n          tokenDecimal,\n        } = record\n        const userLpRate =\n          parseFloat(userLpSupply) > 0\n            ? new BigNumber(userLpBalance).div(userLpSupply)\n            : new BigNumber(0)\n\n        const usd = usdPrice([\n          {\n            amount: new BigNumber(userReserve).plus(userTokenDebt).toFixed(tokenDecimal),\n            token: record,\n          },\n          { amount: userOsd, token: osdTokenData },\n        ])\n        const userUsd = userLpRate.multipliedBy(usd).toFixed(2)\n\n        return (\n          <>\n            <div>\n              {userLpBalance} {symbol} LP | {userLpRate.multipliedBy(100).toFixed(2)}%\n            </div>\n            <div className={styles.line}>\n              <FormatNumber value={userUsd} useAbbr={true} prefix=\"$\" />\n            </div>\n          </>\n        )\n      },\n    },\n  ]\n\n  const columns: ColumnsType<TokenDataFullType> = [\n    ...columns_h5,\n    {\n      title: _('manage_liq'),\n      dataIndex: 'manage',\n      key: 'manage',\n      align: 'center',\n      render: (text, record) => {\n        return (\n          <div className={styles.action}>\n            <div onClick={() => showLiqPanel(0, record)}>{_('add')}</div>\n\n            <div onClick={() => showLiqPanel(1, record)} style={{ marginLeft: 20 }}>\n              {_('withdraw')}\n            </div>\n          </div>\n        )\n      },\n    },\n  ]\n\n  return (\n    <>\n      <Table\n        columns={isPhone ? columns_h5 : columns}\n        dataSource={data}\n        className={styles.table}\n        rowKey=\"id\"\n        loading={{\n          spinning: loading,\n          indicator: <Loading3QuartersOutlined spin style={{ fontSize: 30 }} />,\n        }}\n      />\n      {liquidityVisibleIndex > -1 && (\n        <Liquidity\n          showPanelIndex={liquidityVisibleIndex}\n          setShowPanelIndex={setLiquidityVisibleIndex}\n          currentToken={currentToken}\n        />\n      )}\n      {detailVisible && correctNetWork && (\n        <PoolDetail\n          token={currentToken}\n          visible={detailVisible}\n          setVisible={setDetailVisible}\n          setShowLiuidityPanelIndex={(index: number) => {\n            setDetailVisible(false)\n            setLiquidityVisibleIndex(index)\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolDeposits\n","import styles from './table.less'\nimport _ from '@/i18n'\nimport { useEffect, useState } from 'react'\nimport { connect, useDispatch } from 'umi'\nimport type { TokenStateType } from '@/models/dataType'\nimport type { WalletStateType } from '@/models/dataType'\nimport SearchInput from '@/components/search'\nimport BorrowPositions from './borrowPositions'\nimport WalletBalance from './walletBalance'\nimport PoolDeposits from './poolDeposits'\n\nfunction PortfTable(props) {\n  const dispatch = useDispatch()\n  const { tokenDatas, tokenDatasSorted, osdTokenData, loadingData, dataSourceChainId, account } =\n    props\n  const [list, setList] = useState([])\n  // const [varA, setVarA] = useState(0)\n  const [menuIndex, setMenuIndex] = useState(0)\n\n  useEffect(() => {\n    setList(tokenDatasSorted)\n  }, [tokenDatasSorted])\n\n  const update = async () => {\n    const datas = await dispatch({\n      type: 'tokens/getData',\n    })\n    // console.log('update', 'datas', datas)\n    dispatch({\n      type: 'tokens/fetchPoolInfo',\n      payload: {\n        datas,\n      },\n    })\n  }\n\n  useEffect(() => {\n    update()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dataSourceChainId, account])\n\n  // useEffect(() => {\n  //   const timeoutA = setTimeout(async () => {\n  //     setVarA(varA + 1)\n  //     dispatch({\n  //       type: 'tokens/getData',\n  //     })\n  //   }, 30 * 1e3)\n\n  //   return () => {\n  //     clearTimeout(timeoutA)\n  //   }\n  // }, [varA])\n\n  const loading =\n    (tokenDatas && tokenDatas.length < 1) ||\n    (tokenDatasSorted && tokenDatasSorted.length < 1) ||\n    loadingData\n\n  return (\n    <>\n      <div className={styles.layer_top}>\n        <div className={styles.menu}>\n          {['wallet_balance', 'pool_deposits', 'borrow_positions'].map((item, index) => (\n            <div\n              className={\n                index === menuIndex\n                  ? `${styles.menu_item} ${styles.menu_current_item}`\n                  : styles.menu_item\n              }\n              key={item}\n              onClick={() => setMenuIndex(index)}\n            >\n              {_(item)}\n            </div>\n          ))}\n        </div>\n        <div className={styles.search_wrap}>\n          <SearchInput\n            changeShowList={setList}\n            className=\"search_input\"\n            placeholder={_('search_tips')}\n          />\n        </div>\n      </div>\n      {menuIndex === 0 && <WalletBalance list={list} loading={loading} />}\n      {menuIndex === 1 && (\n        <PoolDeposits list={list} loading={loading} osdTokenData={osdTokenData} />\n      )}\n      {menuIndex === 2 && <BorrowPositions list={list} loading={loading} />}\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  tokens,\n  wallet,\n  loading,\n}: {\n  tokens: TokenStateType\n  wallet: WalletStateType\n  loading: any\n}) => {\n  const effects = loading.effects\n  return {\n    ...tokens,\n    ...wallet,\n    loadingData: effects['tokens/getData'] || false,\n  }\n}\n\nexport default connect(mapStateToProps)(PortfTable)\n","import styles from './index.less'\nimport Layout from '@/layout'\nimport PorfTable from './table'\n// import Chart from './chart'\n\nfunction Portf() {\n  return (\n    <Layout>\n      <div className={styles.container}>\n        {/* <div className={styles.info}>\n          <div></div>\n          <div className={styles.chart}>\n            <Chart />\n          </div>\n        </div> */}\n\n        <PorfTable />\n      </div>\n    </Layout>\n  )\n}\n\nexport default Portf\n"],"sourceRoot":""}