{"version":3,"sources":["webpack://1kx-sourceCode/./src/components/balance/index.less","webpack://1kx-sourceCode/./src/components/card/index.less","webpack://1kx-sourceCode/./src/components/chooseToken/index.less","webpack://1kx-sourceCode/./src/components/menu/index.less","webpack://1kx-sourceCode/./src/components/result/simple.less","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/index.less","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/info.less","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/yield/yield.less","webpack://1kx-sourceCode/./src/pages/earn/common.less","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/index.less","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/info.less","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/stake.less","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/unstake.less","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/yield/yield.less","webpack://1kx-sourceCode/./src/pages/earn/index.less","webpack://1kx-sourceCode/./src/pages/earn/stake/index.less","webpack://1kx-sourceCode/./src/pages/earn/stake/info.less","webpack://1kx-sourceCode/./src/pages/earn/stake/stake.less","webpack://1kx-sourceCode/./src/pages/earn/stake/unstake.less","webpack://1kx-sourceCode/./src/pages/earn/stake/yield/yield.less","webpack://1kx-sourceCode/./src/pages/earn/tradeMining/index.less","webpack://1kx-sourceCode/./src/pages/earn/tradeMining/yield/yield.less","webpack://1kx-sourceCode/./src/components/balance/token.tsx","webpack://1kx-sourceCode/./src/components/card/index.tsx","webpack://1kx-sourceCode/./src/components/search/remote.tsx","webpack://1kx-sourceCode/./src/components/chooseToken/index.tsx","webpack://1kx-sourceCode/./src/components/chooseToken/token.tsx","webpack://1kx-sourceCode/./src/components/menu/index.tsx","webpack://1kx-sourceCode/./src/components/price/usd.tsx","webpack://1kx-sourceCode/./src/components/result/simple.tsx","webpack://1kx-sourceCode/./src/components/search/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/info.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/stake.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/unstake.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/action.tsx","webpack://1kx-sourceCode/./src/pages/earn/common.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/yield/yield.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/yield/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/stake/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/info.tsx","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/yield/yield.tsx","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/yield/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/borrowMining/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/tradeMining/yield/yield.tsx","webpack://1kx-sourceCode/./src/pages/earn/tradeMining/yield/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/tradeMining/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/info.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/yield/yield.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/yield/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/stake.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/unstake.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/action.tsx","webpack://1kx-sourceCode/./src/pages/earn/feeDistribution/index.tsx","webpack://1kx-sourceCode/./src/pages/earn/index.tsx","webpack://1kx-sourceCode/./src/assets/svg/ot.svg"],"names":["module","exports","TokenBalance","props","token","hiddenLabel","setFullAmount","type","balance","userLpBalance","userTokenBalance","_","className","styles","onClick","undefined","toFixed","mapStateToProps","wallet","connect","SimpleCard","amountNode","onAmountChange","amount","onChangeToken","left","right","title","rightBottom","slider","priceType","inputRef","useRef","changeValue","value","AmountLoading","data","e","contains","currentTarget","target","current","focus","toString","onChange","ref","min","placeholder","currentToken","changeToken","_attrsTokens","tokens","SearchInputRemote","changeShowList","dataSourceChainId","currentWallet","handleChange","searchNewToken","chainId","trim","length","size","ChooseToken","tokenDatas","tokenDatasSorted","osdTokenData","tokenClassName","isLogin","loadingData","useState","modalVisible","setModalVisible","isLp","initList","setInitList","list","setList","currentTokenIndex","tokenId","findIndex","v","useEffect","_list","tokenDataWithOsd","newList","filter","parseFloat","userUpdatedAt","choose","item","icon","iconLp","symbol","lpSymbol","liquidity","width","footer","open","getContainer","document","getElementById","body","onCancel","closable","wrapClassName","spinning","newlist","_attrTokens","map","index","fullName","src","Number","loading","effects","Token","style","cursor","PanelMenu","menuIndex","setMenuIndex","menuDatas","menu","key","label","disabled","hightlightIcon","USD","Array","usd","usdPrice","Result","msg","txid","onOk","chainData","getChainById","content","href","exporerTxUrl","network","rel","strAbbreviation","text","CopySvg","okText","escapeRegExpWildcards","searchStr","regExp","test","replace","searchByKeywords","keywords","searchArr","keywordsExp","RegExp","SearchInput","searchResultList","allowClear","prefix","Info","userTotalStaked","borderBottom","stakeApr","userAccountStaked","Stake","dispatch","useDispatch","walletChainId","stakeToken","setStakeToken","submiting","setSubmiting","amountIn","setAmountIn","amountChange","closeResultModal","close","handleSubmit","stake","res","error","message","hash","apr","height","align","conditions","handle","txt","Unstake","account","stakeInfoDatas","unStakeToken","setUnStakeToken","console","log","unStake","unstakeAmount","_token","find","StakeAction","showPanelIndex","setShowPanelIndex","StakeMenuDatas","display","OtImg","otSvg","OtToken","Yield","lpHarvest","userAccountYield","YieldAction","visible","setVisible","YieldMenuDatas","datas","stakeVisibleIndex","setStakeVisibleIndex","yieldVisible","setYieldVisible","setCurrentToken","unstake","harvest","columns","dataIndex","render","record","suffix","useAbbr","dataSource","pagination","rowKey","userTokenDebt","userDebt","userAccountBorrowYield","revenueHarvest","BorrowYieldMenuDatas","BorrowMining","tradeHarvest","userTradeRewards","TradeYieldMenuDatas","userRewards","FeeDistrYieldMenuDatas","revenueStake","revenueUnStake","i","fontSize","float","per","onCell","colSpan","time","rewardSymbols","join","color","overlayClassName","getPopupContainer","Earn","stakePools","tradeStakeData","feeDistributionData","loadStakeError","varA","setVarA","updateData","timeoutA","setTimeout","clearTimeout"],"mappings":"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","file":"p__earn.6d9ebc53.async.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance___3arTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card___ymWUN\",\"label\":\"label____YQCD\",\"value\":\"value___3NsTg\",\"amount\":\"amount___1_fqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"token\":\"token___wlwZo\",\"name\":\"name___19US0\",\"noData\":\"noData___3kbI7\",\"noToken\":\"noToken___2Lef9\",\"container\":\"container___1iN2D\",\"icon\":\"icon___xyh23\",\"content\":\"content___2r9I-\",\"item\":\"item___36hEP\",\"info\":\"info___14NWa\",\"symbol\":\"symbol___1gDJe\",\"full_name\":\"full_name___1Bjef\",\"balance\":\"balance___33GTe\",\"usd\":\"usd___3QRgQ\",\"selected_item\":\"selected_item___2yxgV\",\"modal\":\"modal___1n5AI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel_menu\":\"panel_menu___3DoKS\",\"item\":\"item___KwsiR\",\"icon\":\"icon___3bPdl\",\"item_inner\":\"item_inner___9Volg\",\"selected_item\":\"selected_item___3UOgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal___1_gXd\",\"result_title\":\"result_title___5hb-i\",\"token\":\"token___1FK7M\",\"name\":\"name___1bUZZ\",\"result_link\":\"result_link___l4B_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"token\":\"token___KZqvT\",\"symbol\":\"symbol___1WBr4\",\"yield_wrap\":\"yield_wrap___oEUZv\",\"yield\":\"yield___1b-y8\",\"yield_icon\":\"yield_icon___2gv7R\",\"link\":\"link___4BACw\",\"withdraw\":\"withdraw___2npNI\",\"btn\":\"btn___2D6zQ\",\"data\":\"data___3C3S_\",\"disabled\":\"disabled___2wnKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"info___15D8w\",\"item\":\"item___2NRsL\",\"error\":\"error___2JDyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card___ZmFSa\",\"amount\":\"amount___3uYRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icon___1NZv0\",\"token\":\"token___3CEHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"token\":\"token___2HMx-\",\"symbol\":\"symbol___FgLCO\",\"yield_wrap\":\"yield_wrap___k4oDE\",\"yield\":\"yield___2snFm\",\"yield_icon\":\"yield_icon___2W0QS\",\"link\":\"link___12IrR\",\"withdraw\":\"withdraw___1NMIR\",\"btn\":\"btn___1sILW\",\"data\":\"data___1Lnlg\",\"disabled\":\"disabled___3u0rG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"info___-GIsP\",\"item\":\"item___LIBqQ\",\"error\":\"error___CfH2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"desc___1pK02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"desc___1V4XM\",\"primary\":\"primary___ykUzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card___3OToG\",\"amount\":\"amount___1pNiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container___2C25A\",\"panel\":\"panel___3sIcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"token\":\"token___1MB3U\",\"symbol\":\"symbol___2sgZv\",\"yield_wrap\":\"yield_wrap___3G76Z\",\"yield\":\"yield___34Esm\",\"yield_icon\":\"yield_icon___QMXek\",\"link\":\"link___2ws3B\",\"withdraw\":\"withdraw___ehxaQ\",\"btn\":\"btn___c1cg0\",\"data\":\"data___3pu3Q\",\"disabled\":\"disabled___1t__0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"info___3MZce\",\"item\":\"item___19nOp\",\"error\":\"error___2CtWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"desc___1-ass\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"desc___3xA4f\",\"primary\":\"primary___3ckvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card___1ZAkH\",\"amount\":\"amount___1E2dd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"token\":\"token___36ERT\",\"symbol\":\"symbol___2yLoA\",\"yield_wrap\":\"yield_wrap___7l3yI\",\"yield\":\"yield___2uCte\",\"yield_icon\":\"yield_icon___FUh-J\",\"link\":\"link___1txcV\",\"withdraw\":\"withdraw___3TlWz\",\"btn\":\"btn___3hz-p\",\"data\":\"data___9JCG4\",\"disabled\":\"disabled___2fvoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card___3CWnT\",\"amount\":\"amount___GD4ec\"};","import type { TokenDataType, WalletStateType } from '@/models/dataType'\nimport { connect } from 'umi'\nimport styles from './index.less'\nimport _ from '@/i18n'\nimport { toFixed } from '@/common/utils'\n\nexport function TokenBalance(props: {\n  token: TokenDataType\n  hiddenLabel?: boolean\n  setFullAmount?: (balance: number) => any\n  type?: string\n}) {\n  const { token = {} as TokenDataType, hiddenLabel, setFullAmount, type } = props\n\n  const balance = type === 'lp' ? token.userLpBalance : token.userTokenBalance\n  return (\n    <div>\n      {hiddenLabel ? '' : `${_('balance')}: `}\n      <span\n        className={styles.balance}\n        onClick={setFullAmount ? () => setFullAmount(balance || '0') : undefined}\n      >\n        {balance ? toFixed(balance, 4) : 0}\n      </span>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ wallet }: { wallet: WalletStateType }) => {\n  return {\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(TokenBalance)\n","import { useRef } from 'react'\nimport ChooseToken from '../chooseToken'\nimport styles from './index.less'\nimport type { TokenDataType } from '@/models/dataType'\nimport type { InputRef } from 'antd'\nimport { contains } from '@/common/utils'\nimport { TokenBalance } from '../balance/token'\nimport USD from '@/components/price/usd'\nimport { InputNumber } from 'antd'\nimport { AmountLoading } from '@/common/config'\n\nfunction SimpleCard(props: {\n  amount: string\n  onAmountChange?: (amount: number) => any\n  onChangeToken?: (item: TokenDataType) => any\n  [key: string]: any\n}) {\n  const {\n    onAmountChange,\n    amount,\n    token,\n    onChangeToken,\n    left,\n    right,\n    title,\n    rightBottom,\n    type = '',\n    className,\n    slider,\n    priceType,\n  } = props\n  const inputRef = useRef<InputRef>(null)\n\n  const changeValue = (value: number) => {\n    if (onAmountChange) onAmountChange?.(value)\n  }\n\n  let amountNode\n  if (amount === AmountLoading) {\n    amountNode = AmountLoading\n  } else {\n    amountNode = !amount ? (\n      (amountNode = '$0')\n    ) : (\n      <USD data={{ amount, token }} priceType={priceType} />\n    )\n  }\n  return (\n    <div\n      className={`${styles.card} ${className}`}\n      onClick={(e) => {\n        if (contains(e.currentTarget, e.target)) {\n          inputRef.current!.focus()\n        }\n      }}\n    >\n      <div className={styles.label}>\n        {left || (\n          <div>\n            {title}: {amountNode}\n          </div>\n        )}{' '}\n        {right || (\n          <TokenBalance\n            token={token}\n            setFullAmount={(value: number) => {\n              if (onAmountChange) onAmountChange(value.toString())\n            }}\n            type={type}\n          />\n        )}\n      </div>\n      <div className={styles.value}>\n        <InputNumber\n          className=\"inputTxt\"\n          value={amount}\n          onChange={changeValue}\n          ref={inputRef}\n          min={0}\n          placeholder=\"0.00\"\n        />\n        {rightBottom || (\n          <ChooseToken currentToken={token} changeToken={onChangeToken} type={type} _attrsTokens={props.tokens||[]} />\n        )}\n      </div>\n      {slider}\n    </div>\n  )\n}\nexport default SimpleCard\n","// import styles from './index.less'\nimport type { WalletStateType } from '@/models/dataType'\nimport { Input } from 'antd'\nimport { connect } from 'umi'\nimport _ from '@/i18n'\n\nfunction SearchInputRemote(props) {\n  const { changeShowList, dataSourceChainId, currentWallet } = props\n\n  const handleChange = async (e) => {\n    if (!currentWallet) return\n    const { value } = e.target\n\n    const data = await currentWallet.searchNewToken({\n      chainId: dataSourceChainId,\n      value: value.trim(),\n    })\n\n    if (data && data.length > 0) changeShowList(data)\n  }\n\n  return (\n    <Input\n      size=\"large\"\n      // className={styles.search_input}\n      placeholder={_('search_tips')}\n      onChange={handleChange}\n      className=\"search_input\"\n    />\n  )\n}\n\nconst mapStateToProps = ({ wallet }: { wallet: WalletStateType }) => {\n  return {\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(SearchInputRemote)\n","import { Modal } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { DownloadArr } from '../ui'\nimport styles from './index.less'\nimport _ from '@/i18n'\nimport Token from './token'\nimport USD from '@/components/price/usd'\nimport SearchInput from '../search'\nimport SearchInputRemote from '../search/remote'\nimport { connect } from 'umi'\nimport type { TokenDataType, TokenStateType, WalletStateType } from '@/models/dataType'\nimport DefultIcon from '../icon/defult'\nimport { Loading as Spin } from '@/components/loading'\n\nfunction ChooseToken(props) {\n  const {\n    changeToken,\n    tokenDatas,\n    _attrsTokens=[],//直接通过attr传递过来的token 列表。如果该值为 空数组，则沿用之前逻辑\n    tokenDatasSorted,\n    osdTokenData,\n    type = '',\n    currentToken,\n    tokenClassName,\n    isLogin,\n    loadingData,\n  } = props\n  const [modalVisible, setModalVisible] = useState(false)\n  const isLp = type === 'lp'\n  const [initList, setInitList] = useState([])\n  const [list, setList] = useState(undefined)\n  let currentTokenIndex: TokenDataType | undefined = undefined\n  if (currentToken && currentToken.tokenId && tokenDatas)\n    currentTokenIndex = tokenDatas.findIndex((v) => v.tokenId === currentToken.tokenId)\n\n  useEffect(() => {\n    let _list = tokenDatasSorted || tokenDatas || [];\n    if(_attrsTokens.length>0){\n      _list=_attrsTokens\n    }\n    const tokenDataWithOsd = _list.length > 0 ? [..._list, osdTokenData] : []\n    let newList = tokenDataWithOsd\n    if (isLp || type === 'addLiq' || type === 'colls') {\n      newList = _list\n    } else if (type === 'borrow') {\n      newList = newList.filter((v) => parseFloat(v.userUpdatedAt) > 0)\n    }\n    setInitList(newList)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [(tokenDatas || []).length, tokenDatas, type, isLogin,_attrsTokens.length])\n\n  const choose = (item: TokenDataType) => {\n    setModalVisible(false)\n    changeToken(item)\n  }\n\n  return (\n    <>\n      {typeof currentTokenIndex === 'undefined' ? (\n        <div className={`${styles.token} ${styles.noToken}`} onClick={() => setModalVisible(true)}>\n          <div className={styles.noData}>{_('select_asset')}</div>\n          <DownloadArr />\n        </div>\n      ) : (\n        <Token\n          className={tokenClassName}\n          changeToken={() => setModalVisible(true)}\n          data={\n            isLp\n              ? {\n                  icon: currentToken?.iconLp,\n                  symbol: currentToken?.lpSymbol,\n                  tokenId: currentToken?.liquidity,\n                }\n              : currentToken\n          }\n        />\n      )}\n\n      <Modal\n        width={420}\n        footer={null}\n        open={modalVisible}\n        getContainer={() => document.getElementById('J_Page') || document.body}\n        onCancel={() => setModalVisible(false)}\n        closable={false}\n        wrapClassName={styles.modal}\n      >\n        <Spin spinning={(tokenDatas && tokenDatas.length < 1) || loadingData}>\n          <div className={styles.container}>\n            <div className={styles.search_wrap}>\n              {type === 'newpool' ? (\n                <SearchInputRemote changeShowList={(newlist) => setList(newlist)} />\n              ) : (\n                <SearchInput changeShowList={(newlist) => setList(newlist)} _attrTokens={initList} />\n              )}\n            </div>\n            <div className={styles.content}>\n              {(list || initList).map((item, index) => {\n                const {\n                  symbol,\n                  fullName,\n                  icon,\n                  iconLp,\n                  tokenId,\n                  userLpBalance,\n                  userTokenBalance,\n                  lpSymbol,\n                } = item\n                const balance = type === 'lp' ? userLpBalance : userTokenBalance\n                return (\n                  <div\n                    className={\n                      currentTokenIndex === index\n                        ? `${styles.item} ${styles[`no${index}`]} ${styles.selected_item}`\n                        : `${styles.item} ${styles[`no${index}`]}`\n                    }\n                    key={tokenId}\n                    onClick={() => choose(item)}\n                  >\n                    <div className={styles.info}>\n                      <div className={styles.icon}>\n                        {iconLp || icon ? (\n                          <img src={isLp ? iconLp : icon} />\n                        ) : (\n                          <DefultIcon tokenId={tokenId} size={25} />\n                        )}\n                      </div>\n                      <div className={styles.title}>\n                        <div className={styles.symbol}>{isLp ? lpSymbol : symbol}</div>\n                        <div className={styles.full_name}>{fullName}</div>\n                      </div>\n                    </div>\n                    <div className={styles.balance}>\n                      <div className={styles.no}>{balance}</div>\n                      <div className={styles.usd}>\n                        <USD data={{ amount: Number(balance), token: item }} />\n                      </div>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </Spin>\n      </Modal>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  tokens,\n  wallet,\n  loading,\n}: {\n  tokens: TokenStateType\n  wallet: WalletStateType\n  loading: any\n}) => {\n  const effects = loading.effects\n  return {\n    ...tokens,\n    ...wallet,\n    loadingData: effects['tokens/getData'] || false,\n  }\n}\n\nexport default connect(mapStateToProps)(ChooseToken)\n","import { DownloadArr } from '../ui'\nimport styles from './index.less'\nimport DefultIcon from '../icon/defult'\n\nexport type TokenType = {\n  icon: string\n  symbol: string\n  tokenId: string\n}\n\nfunction Token(props: { data: TokenType; changeToken?: () => void; className?: string }) {\n  const { data, changeToken, className } = props\n  const { icon, symbol, tokenId } = data || {}\n\n  return (\n    <div\n      className={`${styles.token} ${className}`}\n      onClick={changeToken}\n      style={{ cursor: changeToken ? 'pointer' : 'default' }}\n    >\n      {icon ? <img src={icon} /> : <DefultIcon tokenId={tokenId} size={25} />}\n      <div className={styles.name}>{symbol}</div>\n      {changeToken && <DownloadArr />}\n    </div>\n  )\n}\nexport default Token\n","import styles from './index.less'\nimport _ from '@/i18n'\nimport Icon from '@/components/icon'\n\nexport default function PanelMenu(props) {\n  const { menuIndex, setMenuIndex, menuDatas, className } = props\n  return (\n    <div className={`${styles.panel_menu} ${className}`}>\n      {menuDatas.map((menu, index) => {\n        const { icon, key, label, disabled, hightlightIcon } = menu\n        if (menuIndex === index) {\n          return (\n            <div className={`${styles.item} ${styles.selected_item} item${index}`} key={key}>\n              <div className={`${styles.item_inner} primary`}>\n                {icon &&\n                  (hightlightIcon ? (\n                    <img src={hightlightIcon} className={styles.icon} />\n                  ) : (\n                    <Icon type={icon} />\n                  ))}{' '}\n                {_(label)}\n              </div>\n            </div>\n          )\n        }\n        return (\n          <div\n            className={styles.item}\n            key={key}\n            onClick={disabled ? undefined : () => setMenuIndex(index)}\n          >\n            <div className={styles.item_inner}>\n              {icon && <Icon type={icon} />} {_(label)}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","// import BN from 'bignumber.js'\n// import type { TokenDataType } from '@/models/dataType'\nimport { usdPrice } from '@/common/utils'\n\nfunction USD(props) {\n  // console.log(props.data, props.data instanceof Array)\n  let { data, className, priceType } = props\n  if (!(data instanceof Array)) {\n    data = [data]\n  }\n  const usd = usdPrice(data, priceType)\n\n  return <span className={className}>${usd}</span>\n}\n\nexport default USD\n","import { Modal } from 'antd'\nimport styles from './simple.less'\nimport _ from '@/i18n'\nimport Clipboard from '@/components/clipboard'\nimport CopySvg from '@/assets/svg/copy.svg'\nimport { strAbbreviation } from '@/common/utils'\nimport DefultIcon from '../icon/defult'\nimport { getChainById } from '@/layout/header/chainData'\n\nexport function Result({\n  msg,\n  txid,\n  token,\n  onOk,\n  chainId,\n}: {\n  msg: any\n  txid: string\n  chainId: string\n  token?: { icon: string; symbol: string; tokenId: string }\n  onOk?: any\n}) {\n  const { icon, tokenId, symbol } = token || {}\n  const chainData = getChainById(chainId)\n  Modal.warning({\n    width: 420,\n    title: '',\n    content: (\n      <div className={styles.container}>\n        <div className={styles.result_title}>\n          {token && (\n            <div className={styles.token}>\n              {icon ? <img src={icon} width={25} /> : <DefultIcon tokenId={tokenId} size={25} />}\n              <div className={styles.name}>{symbol}</div>\n            </div>\n          )}\n          {msg}\n        </div>\n        <div className={styles.result_link}>\n          <a\n            className=\"primary\"\n            href={`${chainData.exporerTxUrl}/${txid}?network=${chainData.network}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {_('browse')}: {strAbbreviation(txid, [16, 16])}\n          </a>\n          <Clipboard text={txid}>\n            <img src={CopySvg} style={{ cursor: 'pointer' }} />\n          </Clipboard>\n        </div>\n      </div>\n    ),\n    onOk,\n    okText: _('ok'),\n    wrapClassName: styles.modal,\n    getContainer: () => document.getElementById('J_Page') || document.body,\n  })\n}\n","// import styles from './index.less'\nimport _ from '@/i18n'\nimport type { TokenDataType, TokenStateType } from '@/models/dataType'\nimport { Input } from 'antd'\nimport { connect } from 'umi'\nimport { SearchOutlined } from '@ant-design/icons'\n\nconst escapeRegExpWildcards = (searchStr: string) => {\n  const regExp = /([\\(\\[\\{\\\\\\^\\$\\}\\]\\)\\?\\*\\+\\.])/gim\n  if (searchStr && regExp.test(searchStr)) {\n    return searchStr.replace(regExp, '\\\\$1')\n  }\n  return searchStr\n}\n\nconst searchByKeywords = (keywords: string, searchArr) => {\n  const keywordsExp = new RegExp('.*?' + escapeRegExpWildcards(keywords) + '.*?', 'img')\n\n  return searchArr.filter((v: TokenDataType) => {\n    return keywordsExp.test(v.symbol) || keywords == v.tokenId || keywords == v.liquidity\n  })\n}\n\nfunction SearchInput(props) {\n  const { changeShowList, tokenDatasSorted,_attrTokens=[] } = props\n  let list = _attrTokens&&_attrTokens.length>0?_attrTokens: tokenDatasSorted\n  // TODO 这地方逻辑有问题，几种情况 之后需要修改，需要状态提升，因为在刷新的时候 页面也需要重新过滤\n\n  const handleChange = (e) => {\n    const { value } = e.target\n\n    if (!value) {\n      return changeShowList(list)\n    }\n    const searchResultList = searchByKeywords(value, list)\n    changeShowList(searchResultList)\n  }\n\n\n\n  return (\n    <Input\n      // size=\"large\"\n      // className={styles.search_input}\n      placeholder={_('search_tips')}\n      onChange={handleChange}\n      className=\"search_input\"\n      allowClear={true}\n      prefix={<SearchOutlined />}\n    />\n  )\n}\n\nconst mapStateToProps = ({ tokens }: { tokens: TokenStateType }) => {\n  return {\n    ...tokens,\n  }\n}\n\nexport default connect(mapStateToProps)(SearchInput)\n","import styles from './info.less'\nimport _ from '@/i18n'\nimport { Tooltip } from 'antd'\n\nfunction Info({ token }) {\n  return (\n    <div className={styles.info}>\n      <div className={styles.item}>\n        <div className={styles.label}>{_('total_staked')}</div>\n        <div className={styles.fee}>\n          {token.userTotalStaked} {token.lpSymbol} token\n        </div>\n      </div>\n      <div className={styles.item}>\n        <div className={styles.label} style={{ borderBottom: '1px dashed var(--primary-color)' }}>\n          <Tooltip title={_('staking_apr_tips')}>{_('staking_apr')}</Tooltip>\n        </div>\n        <div className={styles.fee}>{token.stakeApr}</div>\n      </div>\n      <div className={styles.item}>\n        <div className={styles.label}>{_('your_staked_position')}</div>\n        <div className={styles.fee}>\n          {token.userAccountStaked} {token.lpSymbol}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Info\n","import styles from './stake.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Card from '@/components/card'\nimport Btn from '@/components/btn'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport Info from './info'\n\nfunction Stake(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [stakeToken, setStakeToken] = useState(currentToken) //当前要stake的token信息，相关数据从stakeToken里获取\n  const [submiting, setSubmiting] = useState(false)\n  const [amountIn, setAmountIn] = useState('0')\n\n  const amountChange = (value: number) => {\n    setAmountIn((value || 0).toString())\n  }\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n    const res = await currentWallet.stake({ chainId: walletChainId, stakeToken, amountIn })\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('staked_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n      dispatch({\n        type: 'tokens/fetchStakeInfo',\n      })\n    }\n\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <Card\n            left={<div />}\n            token={stakeToken}\n            tokens={props.tokens}\n            onChangeToken={setStakeToken}\n            amount={amountIn}\n            onAmountChange={amountChange}\n            type=\"lp\"\n          />\n          <div className={styles.desc}>\n            {_('stake_desc', { token: stakeToken.lpSymbol, apr: stakeToken.stakeApr })}\n          </div>\n\n          <Info token={stakeToken} />\n          <Btn\n            height={50}\n            align=\"center\"\n            onClick={handleSubmit}\n            conditions={[\n              {\n                handle: parseFloat(amountIn || '0') <= 0,\n                txt: _('input_amount'),\n              },\n              {\n                handle: parseFloat(amountIn || '0') > stakeToken.userLpBalance,\n                txt: _('lack_balance'),\n              },\n            ]}\n          >\n            {_('stake')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  // tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  // tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    // ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Stake)\n","import styles from './unstake.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Card from '@/components/card'\nimport Btn from '@/components/btn'\nimport type { TokenStateType, WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport Info from './info'\n\nfunction Unstake(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, account, currentWallet, stakeInfoDatas } = props\n  const [unStakeToken, setUnStakeToken] = useState(currentToken)\n  const [submiting, setSubmiting] = useState(false)\n  const [amountIn, setAmountIn] = useState('0')\n\n  const amountChange = (value: number) => {\n    setAmountIn((value || 0).toString())\n  }\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchPoolInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n    console.log(account, currentWallet, unStakeToken)\n    //account currentWallet 等可以直接使用\n    const res = await currentWallet.unStake({\n      chainId: walletChainId,\n      unStakeToken,\n      unstakeAmount: amountIn,\n    })\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('unstaked_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n      await dispatch({\n        type: 'tokens/updatePrice',\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n    }\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <Card\n            left={<div />}\n            right={\n              <div\n                onClick={async () => {\n                  amountChange(unStakeToken.userAccountStaked)\n                }}\n              >\n                {_('staked')}:{' '}\n                <span className={styles.primary}>{unStakeToken.userAccountStaked}</span>\n              </div>\n            }\n            token={unStakeToken}\n            onChangeToken={(token) => {\n              const _token = stakeInfoDatas.find((v) => v.tokenId === token.tokenId)\n              setUnStakeToken({ ...token, ..._token })\n            }}\n            amount={amountIn}\n            onAmountChange={amountChange}\n            type=\"lp\"\n            tokens={props.tokens}\n          />\n          <div className={styles.desc}>\n            {_('stake_desc', { token: unStakeToken.lpSymbol, apr: unStakeToken.stakeApr })}\n          </div>\n\n          <Info token={unStakeToken} />\n          <Btn\n            height={50}\n            align=\"center\"\n            onClick={handleSubmit}\n            conditions={[\n              {\n                handle: parseFloat(amountIn || '0') <= 0,\n                txt: _('input_amount'),\n              },\n              {\n                handle: parseFloat(amountIn || '0') > unStakeToken.userAccountStaked,\n                txt: _('lack_balance'),\n              },\n            ]}\n          >\n            {_('unstake')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Unstake)\n","import styles from './index.less'\nimport { Modal } from 'antd'\nimport { StakeMenuDatas } from '@/common/config'\nimport PanelMenu from '@/components/menu'\nimport Stake from './stake'\nimport Unstake from './unstake'\n\nexport default function StakeAction(props: any) {\n  const { showPanelIndex, setShowPanelIndex, currentToken,tokens } = props\n\n  return (\n    <Modal\n      width={420}\n      footer={null}\n      open={showPanelIndex > -1}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setShowPanelIndex(-1)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <PanelMenu\n        menuDatas={StakeMenuDatas}\n        menuIndex={showPanelIndex}\n        setMenuIndex={setShowPanelIndex}\n      />\n\n      <div style={{ display: showPanelIndex === 0 ? 'block' : 'none' }}>\n        <Stake currentToken={currentToken} close={() => setShowPanelIndex(-1)} tokens={tokens} />\n      </div>\n      <div style={{ display: showPanelIndex === 1 ? 'block' : 'none' }}>\n        <Unstake currentToken={currentToken} close={() => setShowPanelIndex(-1)} tokens={tokens} />\n      </div>\n    </Modal>\n  )\n}\n","import styles from './common.less'\nimport otSvg from '@/assets/svg/ot.svg'\nimport { osdSvg } from '@/common/config'\n\nexport function OtImg({ size = 15 }) {\n  return <img src={otSvg} className={styles.icon} style={{ width: size, height: size }} />\n}\n\nexport function OtToken() {\n  return (\n    <div className={styles.token}>\n      <OtImg /> OT\n    </div>\n  )\n}\n\nexport function OSDImg() {\n  return <img src={osdSvg} className={styles.icon} />\n}\n","import styles from './yield.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Btn from '@/components/btn'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport Info from '../info'\nimport { OtToken } from '../../common'\n\nfunction Yield(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [submiting, setSubmiting] = useState(false)\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n\n    const res = await currentWallet.lpHarvest({ chainId: walletChainId, stakeToken: currentToken })\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('yield_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n      dispatch({\n        type: 'tokens/fetchStakeInfo',\n      })\n    }\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <div className={styles.card}>\n            <div className={styles.amount}>{currentToken.userAccountYield}</div>\n            <OtToken />\n          </div>\n\n          <Info token={currentToken} />\n          <Btn height={50} align=\"center\" onClick={handleSubmit} conditions={[]}>\n            {_('withdraw')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  // tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  // tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    // ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Yield)\n","import styles from './index.less'\nimport { Modal } from 'antd'\nimport { YieldMenuDatas } from '@/common/config'\nimport PanelMenu from '@/components/menu'\nimport Yield from './yield'\n\nexport default function YieldAction(props: any) {\n  const { visible, setVisible, currentToken } = props\n\n  return (\n    <Modal\n      width={420}\n      footer={null}\n      open={visible}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setVisible(false)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <PanelMenu menuDatas={YieldMenuDatas} menuIndex={0} />\n\n      <div>\n        <Yield currentToken={currentToken} close={() => setVisible(false)} />\n      </div>\n    </Modal>\n  )\n}\n","import styles from './index.less'\nimport { Table } from 'antd'\nimport _ from '@/i18n'\nimport type { TokenDataFullType, TokenDataType } from '@/models/dataType'\nimport FormatNumber from '@/components/formatNumber'\nimport { useEffect, useState } from 'react'\nimport DefultIcon from '@/components/icon/defult'\nimport Action from './action'\nimport YieldAction from './yield'\nimport { OtImg } from '../common'\n// import { formatSat } from '@/common/utils'\n\nfunction Stake(props) {\n  const { datas = [] } = props\n  const [list, setList] = useState([])\n  const [stakeVisibleIndex, setStakeVisibleIndex] = useState(-1)\n  const [yieldVisible, setYieldVisible] = useState(false)\n  const [currentToken, setCurrentToken] = useState({} as TokenDataType)\n\n  useEffect(() => {\n    // setList(datas.filter((v) => parseFloat(v.userAccountStaked) > 0)) //用于筛选数据，更新筛选条件即可\n    setList(datas)\n  }, [datas])\n\n  const unstake = (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setStakeVisibleIndex(1)\n  }\n  const stake = (data: TokenDataFullType) => {\n    console.log(data,'stake')\n    setCurrentToken(data)\n    setStakeVisibleIndex(0)\n  }\n  const harvest = (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setYieldVisible(true)\n  }\n  const columns = [\n    {\n      title: _('stake'),\n      dataIndex: 'stake',\n      key: 'stake',\n      render: (text: string, record: TokenDataFullType) => {\n        const icon = record.icon ? (\n          <img src={record.icon} style={{ width: 25, height: 25 }} />\n        ) : (\n          <DefultIcon tokenId={record.tokenId} size={25} />\n        )\n        return (\n          <div className={styles.token}>\n            {icon} <span className={styles.symbol}>{record.lpSymbol}</span>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('total_staked'),\n      dataIndex: 'userTotalStaked',\n      key: 'total_staked',\n      align: 'right',\n      render: (text: string, record: TokenDataFullType) => {\n        return <FormatNumber value={text} suffix={record.lpSymbol} />\n      },\n    },\n    {\n      title: _('your_stake'),\n      dataIndex: 'userAccountStaked',\n      key: 'your_stake',\n      align: 'right',\n      render: (text: string, record: TokenDataFullType) => {\n        return <FormatNumber value={text} suffix={record.lpSymbol} />\n      },\n    },\n    {\n      title: `24${_('h_yield')}`,\n      dataIndex: 'userDayStaked',\n      key: 'h_yield',\n      align: 'right',\n      render: (text: string) => {\n        return (\n          <div className={styles.yield_wrap}>\n            <div className={styles.yield}>\n              <OtImg />\n              <FormatNumber value={text} />\n            </div>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('apr'),\n      dataIndex: 'stakeApr',\n      key: 'stakeApr',\n      align: 'right',\n    },\n    {\n      title: _('unstake'),\n      dataIndex: 'unstake',\n      key: 'unstake',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        return parseFloat(record.userAccountStaked) > 0 ? (\n          <span onClick={() => unstake(record)} className={styles.link}>\n            {_('unstake')}\n          </span>\n        ) : (\n          <span className={styles.disabled}>{_('unstake')}</span>\n        )\n      },\n    },\n    {\n      title: _('stake'),\n      dataIndex: 'stake_a',\n      key: 'stake_a',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        return (\n          <span onClick={() => stake(record)} className={styles.link}>\n            {_('stake')}\n          </span>\n        )\n      },\n    },\n    {\n      title: _('withdraw_yield'),\n      dataIndex: 'yield',\n      key: 'yield',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        const { userAccountYield } = record\n        return parseFloat(userAccountYield) > 0 ? (\n          <div className={styles.withdraw}>\n            <div className={styles.btn} onClick={() => harvest(record)}>\n              {_('withdraw')} <FormatNumber value={userAccountYield} useAbbr={true} /> OT\n            </div>\n            <div className={styles.data}>\n              <FormatNumber value={userAccountYield} useAbbr={true} /> OT\n            </div>\n          </div>\n        ) : (\n          <span className={styles.disabled}>--</span>\n        )\n      },\n    },\n  ]\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Table columns={columns} dataSource={list} pagination={false} rowKey=\"tokenId\" />\n      </div>\n\n      {stakeVisibleIndex > -1 && (\n        <Action\n          showPanelIndex={stakeVisibleIndex}\n          setShowPanelIndex={setStakeVisibleIndex}\n          currentToken={currentToken}\n          tokens={datas}\n        />\n      )}\n\n      {yieldVisible && (\n        <YieldAction\n          visible={yieldVisible}\n          setVisible={setYieldVisible}\n          currentToken={currentToken}\n          tokens={datas}\n        />\n      )}\n    </>\n  )\n}\n\nexport default Stake\n","import styles from './info.less'\nimport _ from '@/i18n'\nimport { Tooltip } from 'antd'\nimport { toFixed } from '@/common/utils'\n\nfunction Info({ token }) {\n  const { userTokenDebt, symbol, apr, userDebt } = token\n\n  return (\n    <div className={styles.info}>\n      <div className={styles.item}>\n        <div className={styles.label}>{_('total_borrowed')}</div>\n        <div className={styles.fee}>\n          {toFixed(userTokenDebt, 2)} {symbol}\n        </div>\n      </div>\n      <div className={styles.item}>\n        <div className={styles.label}>{_('your_borrow_position')}</div>\n        <div className={styles.fee}>\n          {toFixed(userDebt, 2)} {symbol}\n        </div>\n      </div>\n      <div className={styles.item}>\n        <div className={styles.label} style={{ borderBottom: '1px dashed var(--primary-color)' }}>\n          <Tooltip title={_('yield_apr_tips')}>{_('yield_apr')}</Tooltip>\n        </div>\n        <div className={styles.fee}>{apr}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Info\n","import styles from './yield.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Btn from '@/components/btn'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport Info from '../info'\nimport { OtToken } from '../../common'\n\nfunction Yield(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [submiting, setSubmiting] = useState(false)\n  const { userAccountBorrowYield } = currentToken\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n\n    const res = await currentWallet.revenueHarvest(walletChainId)\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('yield_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n      dispatch({\n        type: 'tokens/fetchStakeInfo',\n      })\n    }\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <div className={styles.card}>\n            <div className={styles.amount}>{userAccountBorrowYield}</div>\n            <OtToken />\n          </div>\n          <div className={styles.desc}>{_('borrow_yield_desc')}</div>\n\n          <Info token={currentToken} />\n          <Btn\n            height={50}\n            align=\"center\"\n            onClick={handleSubmit}\n            conditions={[\n              {\n                handle: parseFloat(userAccountBorrowYield || '0') <= 0,\n                txt: _('no_yield'),\n              },\n            ]}\n          >\n            {_('withdraw')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  // tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  // tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    // ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Yield)\n","import styles from './index.less'\nimport { Modal } from 'antd'\nimport { BorrowYieldMenuDatas } from '@/common/config'\nimport PanelMenu from '@/components/menu'\nimport Yield from './yield'\n\nexport default function YieldAction(props: any) {\n  const { visible, setVisible, currentToken } = props\n\n  return (\n    <Modal\n      width={420}\n      footer={null}\n      open={visible}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setVisible(false)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <PanelMenu menuDatas={BorrowYieldMenuDatas} menuIndex={0} />\n\n      <div>\n        <Yield currentToken={currentToken} close={() => setVisible(false)} />\n      </div>\n    </Modal>\n  )\n}\n","import styles from './index.less'\nimport { Table } from 'antd'\nimport _ from '@/i18n'\nimport type { TokenDataFullType, TokenDataType } from '@/models/dataType'\nimport FormatNumber from '@/components/formatNumber'\nimport { useEffect, useState } from 'react'\nimport DefultIcon from '@/components/icon/defult'\nimport YieldAction from './yield'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect } from 'umi'\nimport { OtImg } from '../common'\n\nfunction BorrowMining(props) {\n  const { datas = [] } = props\n  const [list, setList] = useState([])\n  const [yieldVisible, setYieldVisible] = useState(false)\n  const [currentToken, setCurrentToken] = useState({} as TokenDataType)\n\n  useEffect(() => {\n    if (datas.length > 0) setList(datas)\n  }, [datas])\n\n  const harvest = async (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setYieldVisible(true)\n  }\n\n  const columns = [\n    {\n      title: _('borrow_mining'),\n      dataIndex: 'borrow_mining',\n      key: 'borrow_mining',\n      render: (text: string, record: TokenDataFullType) => {\n        const icon = record.icon ? (\n          <img src={record.icon} style={{ width: 25, height: 25 }} />\n        ) : (\n          <DefultIcon tokenId={record.tokenId} size={25} />\n        )\n        return (\n          <div className={styles.token}>\n            {icon} <span className={styles.symbol}>{record.symbol}</span>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('total_borrowed'),\n      dataIndex: 'total_borrowed',\n      key: 'total_borrowed',\n      align: 'right',\n      render: (text: string, record: TokenDataFullType) => {\n        const { userTokenDebt, symbol } = record\n        return <FormatNumber value={userTokenDebt} useAbbr={true} suffix={symbol} />\n      },\n    },\n    {\n      title: _('your_borrow'),\n      dataIndex: 'your_borrow',\n      key: 'your_borrow',\n      align: 'right',\n      render: (text: string, record: TokenDataFullType) => {\n        const { userDebt, symbol } = record\n        return <FormatNumber value={userDebt} useAbbr={true} suffix={symbol} />\n      },\n    },\n    {\n      title: `24${_('h_yield')}`,\n      dataIndex: 'userBorrowDayStaked',\n      key: 'userBorrowDayStaked',\n      align: 'right',\n      render: (text: string) => {\n        return (\n          <div className={styles.yield_wrap}>\n            <div className={styles.yield}>\n              <OtImg />\n              <FormatNumber value={text} />\n            </div>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('apr'),\n      dataIndex: 'borrowYieldApr',\n      key: 'apr',\n      align: 'right',\n    },\n    {\n      title: _('withdraw_yield'),\n      dataIndex: 'yield',\n      key: 'yield',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        const { userAccountBorrowYield } = record\n        return parseFloat(userAccountBorrowYield) > 0 ? (\n          <div className={styles.withdraw}>\n            <div className={styles.btn} onClick={() => harvest(record)}>\n              {_('withdraw')} {userAccountBorrowYield} OT\n            </div>\n            <div className={styles.data}>{userAccountBorrowYield} OT</div>\n          </div>\n        ) : (\n          <span className={styles.disabled}>--</span>\n        )\n      },\n    },\n  ]\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Table columns={columns} dataSource={list} pagination={false} rowKey=\"tokenId\" />\n      </div>\n\n      {yieldVisible && (\n        <YieldAction\n          visible={yieldVisible}\n          setVisible={setYieldVisible}\n          currentToken={currentToken}\n        />\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ wallet }: { wallet: WalletStateType }) => {\n  return {\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(BorrowMining)\n","import styles from './yield.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Btn from '@/components/btn'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport Info from '../info'\nimport { OtToken } from '../../common'\n\nfunction Yield(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [submiting, setSubmiting] = useState(false)\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n\n    const res = await currentWallet.tradeHarvest(walletChainId)\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('yield_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n      dispatch({\n        type: 'tokens/fetchStakeInfo',\n      })\n    }\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <div className={styles.card}>\n            <div className={styles.amount}>{currentToken.userTradeRewards}</div>\n            <OtToken />\n          </div>\n\n          {/* <Info token={currentToken} /> */}\n          <Btn height={50} align=\"center\" onClick={handleSubmit} conditions={[]}>\n            {_('withdraw')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  // tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  // tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    // ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Yield)\n","import styles from './index.less'\nimport { Modal } from 'antd'\nimport { TradeYieldMenuDatas } from '@/common/config'\nimport PanelMenu from '@/components/menu'\nimport Yield from './yield'\n\nexport default function YieldAction(props: any) {\n  const { visible, setVisible, currentToken } = props\n\n  return (\n    <Modal\n      width={420}\n      footer={null}\n      open={visible}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setVisible(false)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <PanelMenu menuDatas={TradeYieldMenuDatas} menuIndex={0} />\n\n      <div>\n        <Yield currentToken={currentToken} close={() => setVisible(false)} />\n      </div>\n    </Modal>\n  )\n}\n","import styles from './index.less'\nimport { Table } from 'antd'\nimport _ from '@/i18n'\nimport type { TokenDataFullType, TokenDataType } from '@/models/dataType'\nimport FormatNumber from '@/components/formatNumber'\nimport { useEffect, useState } from 'react'\nimport YieldAction from './yield'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect } from 'umi'\nimport { OtImg } from '../common'\n\nfunction BorrowMining(props) {\n  const { datas = [] } = props\n  const [list, setList] = useState([])\n  const [yieldVisible, setYieldVisible] = useState(false)\n  const [currentToken, setCurrentToken] = useState({} as TokenDataType)\n\n  useEffect(() => {\n    // setList(datas.filter((v) => parseFloat(v.userDebt) > 0))\n    if (datas.length > 0) setList(datas)\n  }, [datas])\n\n  const harvest = async (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setYieldVisible(true)\n    // currentWallet.borrowHarvest({chainId: walletChainId, })\n    // setYieldVisible(false)\n  }\n\n  const columns = [\n    {\n      title: _('trade_mining'),\n      dataIndex: 'name',\n      key: 'trade_mining',\n      render: (text: string) => {\n        return (\n          <div className={styles.token}>\n            <span className={styles.symbol}>{text}</span>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('h_volume'),\n      dataIndex: 'userVolume',\n      key: '24h_volume',\n      align: 'right',\n      render: (text: string) => {\n        return <FormatNumber value={text} useAbbr={true} />\n      },\n    },\n    {\n      title: _('your_24h_volume'),\n      dataIndex: 'userAccountVolume',\n      key: 'your_24h_volume',\n      align: 'right',\n      render: (text: string) => {\n        return <FormatNumber value={text} useAbbr={true} />\n      },\n    },\n    {\n      title: `24${_('h_yield')}`,\n      dataIndex: 'userTradeYield',\n      key: 'h_yield',\n      align: 'right',\n      render: (text: string) => {\n        return (\n          <div className={styles.yield_wrap}>\n            <div className={styles.yield}>\n              <OtImg />\n              <FormatNumber value={text} />\n            </div>\n          </div>\n        )\n      },\n    },\n    {\n      title: _('withdraw_yield'),\n      dataIndex: 'userTradeRewards',\n      key: 'yield',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        return parseFloat(text) > 0 ? (\n          <div className={styles.withdraw}>\n            <div className={styles.btn} onClick={() => harvest(record)}>\n              {_('withdraw')} {text} OT\n            </div>\n            <div className={styles.data}>{text} OT</div>\n          </div>\n        ) : (\n          <span className={styles.disabled}>--</span>\n        )\n      },\n    },\n  ]\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Table columns={columns} dataSource={list} pagination={false} rowKey=\"tokenId\" />\n      </div>\n\n      {yieldVisible && (\n        <YieldAction\n          visible={yieldVisible}\n          setVisible={setYieldVisible}\n          currentToken={currentToken}\n        />\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ wallet }: { wallet: WalletStateType }) => {\n  return {\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(BorrowMining)\n","import styles from './info.less'\nimport _ from '@/i18n'\nimport { Tooltip } from 'antd'\n\nfunction Info({ token }) {\n  return (\n    <div className={styles.info}>\n      <div className={styles.item}>\n        <div className={styles.label}>{_('total_staked')}</div>\n        <div className={styles.fee}>{token.userTotalStaked} OT token</div>\n      </div>\n      <div className={styles.item}>\n        <div className={styles.label} style={{ borderBottom: '1px dashed var(--primary-color)' }}>\n          <Tooltip title={_('staking_apr_tips')}>{_('staking_apr')}</Tooltip>\n        </div>\n        <div className={styles.fee}>{token.apr}</div>\n      </div>\n      <div className={styles.item}>\n        <div className={styles.label}>{_('your_staked_position')}</div>\n        <div className={styles.fee}>{token.userAccountStaked} OT</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Info\n","import styles from './yield.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Btn from '@/components/btn'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport { OtToken } from '../../common'\nimport Info from '../info'\n\nfunction Yield(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [submiting, setSubmiting] = useState(false)\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n\n    const res = await currentWallet.revenueHarvest(walletChainId)\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('yield_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n      dispatch({\n        type: 'tokens/fetchStakeInfo',\n      })\n    }\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <div className={styles.card}>\n            <div className={styles.amount}>{currentToken.userRewards}</div>\n            <OtToken />\n          </div>\n          <Info token={currentToken} />\n          <Btn height={50} align=\"center\" onClick={handleSubmit} conditions={[]}>\n            {_('withdraw')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  // tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  // tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    // ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Yield)\n","import styles from './index.less'\nimport { Modal } from 'antd'\nimport { FeeDistrYieldMenuDatas } from '@/common/config'\nimport PanelMenu from '@/components/menu'\nimport Yield from './yield'\n\nexport default function YieldAction(props: any) {\n  const { visible, setVisible, currentToken } = props\n\n  return (\n    <Modal\n      width={420}\n      footer={null}\n      open={visible}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setVisible(false)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <PanelMenu menuDatas={FeeDistrYieldMenuDatas} menuIndex={0} />\n\n      <div>\n        <Yield currentToken={currentToken} close={() => setVisible(false)} />\n      </div>\n    </Modal>\n  )\n}\n","import styles from './stake.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Card from '@/components/card'\nimport Btn from '@/components/btn'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport Info from './info'\nimport { OtToken } from '../common'\n\nfunction Stake(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [submiting, setSubmiting] = useState(false)\n  const [amountIn, setAmountIn] = useState('0')\n\n  const amountChange = (value: number) => {\n    setAmountIn((value || 0).toString())\n  }\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n    const res = await currentWallet.revenueStake(walletChainId, amountIn, currentToken)\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('staked_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n      dispatch({\n        type: 'tokens/fetchStakeInfo',\n      })\n    }\n\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <Card\n            left={<div />}\n            token={currentToken}\n            amount={amountIn}\n            onAmountChange={amountChange}\n            right={\n              <div\n                onClick={async () => {\n                  amountChange(currentToken.userTokenBalance)\n                }}\n              >\n                {_('balance')}: <span className=\"primary\">{currentToken.userTokenBalance}</span>\n              </div>\n            }\n            rightBottom={<OtToken />}\n          />\n          <Info token={currentToken} />\n          <Btn\n            height={50}\n            align=\"center\"\n            onClick={handleSubmit}\n            conditions={[\n              {\n                handle: parseFloat(amountIn || '0') <= 0,\n                txt: _('input_amount'),\n              },\n              {\n                handle: parseFloat(amountIn || '0') > currentToken.userLpBalance,\n                txt: _('lack_balance'),\n              },\n            ]}\n          >\n            {_('stake')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  // tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  // tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    // ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Stake)\n","import styles from './unstake.less'\nimport _ from '@/i18n'\nimport { Spin } from 'antd'\nimport { useState } from 'react'\nimport Card from '@/components/card'\nimport Btn from '@/components/btn'\nimport type { TokenStateType, WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { message } from '@/components/message'\nimport { Result } from '@/components/result/simple'\nimport { OtToken } from '../common'\nimport Info from './info'\n\nfunction Unstake(props) {\n  const dispatch = useDispatch()\n  const { walletChainId, currentToken, currentWallet } = props\n  const [submiting, setSubmiting] = useState(false)\n  const [amountIn, setAmountIn] = useState('0')\n\n  const amountChange = (value: number) => {\n    setAmountIn((value || 0).toString())\n  }\n\n  const closeResultModal = async () => {\n    props.close()\n    await dispatch({\n      type: 'tokens/updatePrice',\n    })\n    dispatch({\n      type: 'tokens/fetchPoolInfo',\n    })\n  }\n\n  const handleSubmit = async () => {\n    setSubmiting(true)\n    //account currentWallet 等可以直接使用\n    const res = await currentWallet.revenueUnStake(walletChainId, amountIn, currentToken)\n    if (res.error) {\n      message(res.error)\n    } else if (res.hash) {\n      Result({\n        msg: _('unstaked_done'),\n        txid: res.hash,\n        onOk: closeResultModal,\n        chainId: walletChainId,\n      })\n      await dispatch({\n        type: 'tokens/updatePrice',\n      })\n\n      dispatch({\n        type: 'tokens/fetchPoolInfo',\n      })\n    }\n    setSubmiting(false)\n  }\n\n  return (\n    <>\n      <Spin spinning={submiting}>\n        <div className={styles.container}>\n          <Card\n            left={<div />}\n            right={\n              <div\n                onClick={async () => {\n                  amountChange(currentToken.userAccountStaked)\n                }}\n              >\n                {_('staked')}:{' '}\n                <span className={styles.primary}>{currentToken.userAccountStaked}</span>\n              </div>\n            }\n            token={currentToken}\n            amount={amountIn}\n            onAmountChange={amountChange}\n            rightBottom={<OtToken />}\n          />\n          <Info token={currentToken} />\n          <Btn\n            height={50}\n            align=\"center\"\n            onClick={handleSubmit}\n            conditions={[\n              {\n                handle: parseFloat(amountIn || '0') <= 0,\n                txt: _('input_amount'),\n              },\n              {\n                handle: parseFloat(amountIn || '0') > currentToken.userAccountStaked,\n                txt: _('lack_balance'),\n              },\n            ]}\n          >\n            {_('unstake')}\n          </Btn>\n        </div>\n      </Spin>\n    </>\n  )\n}\n\nconst mapStateToProps = ({\n  // common,\n  tokens,\n  wallet,\n}: {\n  // common: CommonStateType\n  tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    // ...common,\n    ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Unstake)\n","import styles from './index.less'\nimport { Modal } from 'antd'\nimport { StakeMenuDatas } from '@/common/config'\nimport PanelMenu from '@/components/menu'\nimport Stake from './stake'\nimport Unstake from './unstake'\n\nexport default function StakeAction(props: any) {\n  const { showPanelIndex, setShowPanelIndex, currentToken } = props\n\n  return (\n    <Modal\n      width={420}\n      footer={null}\n      open={showPanelIndex > -1}\n      getContainer={() => document.getElementById('J_Page') || document.body}\n      onCancel={() => setShowPanelIndex(-1)}\n      closable={false}\n      wrapClassName={styles.modal}\n    >\n      <PanelMenu\n        menuDatas={StakeMenuDatas}\n        menuIndex={showPanelIndex}\n        setMenuIndex={setShowPanelIndex}\n      />\n\n      <div style={{ display: showPanelIndex === 0 ? 'block' : 'none' }}>\n        <Stake currentToken={currentToken} close={() => setShowPanelIndex(-1)} />\n      </div>\n      <div style={{ display: showPanelIndex === 1 ? 'block' : 'none' }}>\n        <Unstake currentToken={currentToken} close={() => setShowPanelIndex(-1)} />\n      </div>\n    </Modal>\n  )\n}\n","import styles from './index.less'\nimport { Table, Tooltip } from 'antd'\nimport _ from '@/i18n'\nimport type { TokenDataFullType, TokenDataType } from '@/models/dataType'\nimport FormatNumber from '@/components/formatNumber'\nimport { useEffect, useState } from 'react'\nimport YieldAction from './yield'\nimport Action from './action'\nimport type { WalletStateType } from '@/models/dataType'\nimport { connect } from 'umi'\nimport { OtImg } from '../common'\n\nfunction BorrowMining(props) {\n  const { datas = [] } = props\n  const [list, setList] = useState([])\n  const [stakeVisibleIndex, setStakeVisibleIndex] = useState(-1)\n  const [yieldVisible, setYieldVisible] = useState(false)\n  const [currentToken, setCurrentToken] = useState({} as TokenDataType)\n\n  useEffect(() => {\n    // setList(datas.filter((v) => parseFloat(v.userDebt) > 0))\n    if (datas.length > 0) setList(datas)\n    console.log(datas,'datas')\n  }, [datas])\n\n  const unstake = (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setStakeVisibleIndex(1)\n  }\n  const stake = (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setStakeVisibleIndex(0)\n  }\n  const harvest = async (data: TokenDataFullType) => {\n    setCurrentToken(data)\n    setYieldVisible(true)\n    // currentWallet.borrowHarvest({chainId: walletChainId, })\n    // setYieldVisible(false)\n  }\n\n  const columns = [\n    {\n      title: _('fee_distribution'),\n      dataIndex: 'name',\n      key: 'fee_distribution',\n      render: (text, record, i) => {\n        return (\n          <div className={styles.token}>\n            {i === 0 && <OtImg size={25} />} <span className={styles.symbol}>{text}</span>\n          </div>\n        )\n      },\n    },\n\n    {\n      title: _('total_staked'),\n      dataIndex: 'userTotalStaked',\n      key: 'total_staked',\n      align: 'right',\n      render: (text: string) => {\n        return <FormatNumber value={text} />\n      },\n    },\n    {\n      title: _('your_stake'),\n      dataIndex: 'userAccountStaked',\n      key: 'your_stake',\n      align: 'right',\n      render: (text: string) => {\n        return <FormatNumber value={text} />\n      },\n    },\n    {\n      title: _('apr'),\n      dataIndex: 'apr',\n      key: 'apr',\n      align: 'right',\n    },\n    {\n      title: _('unstake'),\n      dataIndex: 'unstake',\n      key: 'unstake',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType, i: number) => {\n        if (i === 1)\n          return (\n            <span style={{ fontSize: 14, float: 'right' }}>\n              {_('boost_per')} {record.per}\n            </span>\n          )\n        return parseFloat(record.userAccountStaked) > 0 ? (\n          <span onClick={() => unstake(record)} className={styles.link}>\n            {_('unstake')}\n          </span>\n        ) : (\n          <span className={styles.disabled}>{_('unstake')}</span>\n        )\n      },\n      onCell: (text, index) => {\n        if (index === 1) {\n          return { colSpan: 4 }\n        }\n      },\n    },\n    {\n      title: _('stake'),\n      dataIndex: 'stake_a',\n      key: 'stake_a',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        return (\n          <span onClick={() => stake(record)} className={styles.link}>\n            {_('stake')} OT\n          </span>\n        )\n      },\n      onCell: (text, index) => {\n        if (index === 1) {\n          return { colSpan: 0 }\n        }\n      },\n    },\n    {\n      title: _('rewards') + (list[0] ? `(${list[0].time})` : ''),\n      dataIndex: 'userExpectedRewards',\n      key: 'userExpectedRewards',\n      // render: (text) => {\n      //   return <div>${text}</div>\n      // },\n      onCell: (text, index) => {\n        if (index === 1) {\n          return { colSpan: 0 }\n        }\n      },\n    },\n    {\n      title: _('withdraw'),\n      dataIndex: 'userRewards',\n      key: 'yield',\n      align: 'center',\n      render: (text: string, record: TokenDataFullType) => {\n        return parseFloat(text) > 0 ? (\n          <div className={styles.withdraw}>\n            <Tooltip\n              title={`in ${record.rewardSymbols.join(', ')}.`}\n              color=\"#03CDC1\"\n              overlayClassName={styles.tooltip}\n              getPopupContainer={() => document.getElementById('J_Page') || document.body}\n            >\n              <div className={styles.btn} onClick={() => harvest(record)}>\n                {_('withdraw')} ${text}\n              </div>\n            </Tooltip>\n            <div className={styles.data}>${text}</div>\n          </div>\n        ) : (\n          <div className={styles.disabled}>--</div>\n        )\n      },\n      onCell: (text, index) => {\n        if (index === 1) {\n          return { colSpan: 0 }\n        }\n      },\n    },\n  ]\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Table columns={columns} dataSource={list} pagination={false} rowKey=\"name\" />\n      </div>\n\n      {stakeVisibleIndex > -1 && (\n        <Action\n          showPanelIndex={stakeVisibleIndex}\n          setShowPanelIndex={setStakeVisibleIndex}\n          currentToken={currentToken}\n        />\n      )}\n\n      {yieldVisible && (\n        <YieldAction\n          visible={yieldVisible}\n          setVisible={setYieldVisible}\n          currentToken={currentToken}\n        />\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ wallet }: { wallet: WalletStateType }) => {\n  return {\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(BorrowMining)\n","import styles from './index.less'\nimport Layout from '@/layout'\nimport Stake from './stake'\nimport BorrowMining from './borrowMining'\nimport TradeMining from './tradeMining'\nimport FeeDistribution from './feeDistribution'\nimport type { TokenStateType, WalletStateType } from '@/models/dataType'\nimport { connect, useDispatch } from 'umi'\nimport { useEffect, useState } from 'react'\nimport { Loading as Spin } from '@/components/loading'\n\nfunction Earn(props) {\n  const dispatch = useDispatch()\n  const {\n    tokenDatas = [],\n    stakeInfoDatas,\n    stakePools,\n    tradeStakeData,\n    feeDistributionData,\n    dataSourceChainId,\n    account,\n    loadStakeError,\n  } = props\n  const [varA, setVarA] = useState(0)\n\n  const updateData = async () => {\n    await dispatch({\n      type: 'tokens/fetchPoolInfo',\n    })\n    dispatch({\n      type: 'tokens/fetchStakeInfo',\n    })\n  }\n\n  useEffect(() => {\n    updateData()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tokenDatas.length > 0, dataSourceChainId, account])\n\n  useEffect(() => {\n    const timeoutA = setTimeout(async () => {\n      setVarA(varA + 1)\n      updateData()\n    }, 30 * 1e3)\n\n    return () => {\n      clearTimeout(timeoutA)\n    }\n  }, [varA])\n\n  return (\n    <Layout>\n      <div className={styles.container}>\n        {loadStakeError ? (\n          <div className={styles.panel}>\n            <FeeDistribution datas={[]} />\n          </div>\n        ) : (\n          <Spin spinning={(stakeInfoDatas || []).length < 1}>\n            <div className={styles.panel}>\n              <FeeDistribution datas={feeDistributionData} />\n            </div>\n            <div className={styles.panel}>\n              <Stake\n                datas={stakePools}\n                // datas={stakeInfoDatas.filter(\n                //   (v) => parseFloat(v.userLpBalance) > 0 || parseFloat(v.userAccountStaked) > 0,\n                // )}\n              />\n            </div>\n            <div className={styles.panel}>\n              <BorrowMining\n                datas={stakeInfoDatas}\n                // datas={stakeInfoDatas.filter((v) => parseFloat(v.userDebt) > 0)}\n              />\n            </div>\n            <div className={styles.panel}>\n              <TradeMining datas={tradeStakeData} />\n            </div>\n          </Spin>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nconst mapStateToProps = ({\n  tokens,\n  wallet,\n}: {\n  tokens: TokenStateType\n  wallet: WalletStateType\n}) => {\n  return {\n    ...tokens,\n    ...wallet,\n  }\n}\n\nexport default connect(mapStateToProps)(Earn)\n","module.exports = __webpack_public_path__ + \"static/ot.a29f6427.svg\";"],"sourceRoot":""}